/*
 * Copyright (c) 2008, Jack J. Woehr jwoehr@softwoehr.com
 * PO Box 51, Golden, Colorado 80402-0051 USA
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *         notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *         notice, this list of conditions and the following disclaimer
 *         in the documentation and/or other materials provided with the
 *         distribution.
 *     * Neither the name of the PigIron Project nor the names of its
 *         contributors may be used to endorse or promote products derived
 *         from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/* Autogenerated Thu Jan  8 20:59:10 UTC 2009
 * by pigbuilderfunc.m4 Copyright *C* 2008 Jack J. Woehr
 * Part of the PigIron Project http://pigiron.sourceforge.net
 */
package com.softwoehr.piglet.builder.functions;


/**
 * {@code Virtual_Network_Vswitch_Set} VSMAPI Function
 */
public class VirtualNetworkVswitchSet extends BuilderFunctionProxy {


    /** Unspecified */
    public static final int CONNECTION_VALUE_UNSPECIFIED = 0;

    /** Activate connection */
    public static final int CONNECTION_VALUE_ACTIVATE = 1;

    /** Dont activate connection' */
    public static final int CONNECTION_VALUE_DO_NOT_ACTIVATE = 2;

    /** Unspecified */
    public static final int ROUTING_VALUE_UNSPECIFIED = 0;

    /** Device identified in real_device_address will not act as a router to the virtual switch */
    public static final int ROUTING_VALUE_NONROUTER = 1;

    /** device identified in real_device_address will act as a primary router to the virtual switch */
    public static final int ROUTING_VALUE_PRIROUTER = 2;

    /** Unspecified */
    public static final int TRANSPORT_TYPE_UNSPECIFIED = 0;

    /** IP */
    public static final int TRANSPORT_TYPE_IP = 1;

    /** Ethernet */
    public static final int TRANSPORT_TYPE_ETHERNET = 2;

    /** Unspecified */
    public static final int PORT_TYPE_UNSPECIFIED = 0;

    /** Access */
    public static final int PORT_TYPE_ACCESS = 1;

    /** Trunk */
    public static final int PORT_TYPE_TRUNK = 2;

    /** Unspecified */
    public static final int UPDATE_SYSTEM_CONFIG_INDICATOR_UNSPECIFIED = 0;

    /** Create virtual switch on the active system */
    public static final int UPDATE_SYSTEM_CONFIG_INDICATOR_CREATE = 1;

    /** Create virtual switch on the active system and add virtual switch definition to system configuration file */
    public static final int UPDATE_SYSTEM_CONFIG_INDICATOR_CREATE_ADD = 2;

    /** Add virtual switch definition to system configuration file */
    public static final int UPDATE_SYSTEM_CONFIG_INDICATOR_ADD = 3;

    /** GVRP unspecified */
    public static final int GVRP_VALUE_UNSPECIFIED = 0;

    /** GVRP */
    public static final int GVRP_VALUE_GVRP = 1;

    /** non-GVRP */
    public static final int GVRP_VALUE_NOGVRP = 2;

    /**
     * Constructor does nothing.
     */ 
    public VirtualNetworkVswitchSet() { super();}

    /**
     *  Gets the parameters array for this BuilderFunctionProxy extender
     *
     * @return    The parameters that need form building and filling in
     */ 
    public Parameter [] getParameters() {
        return new Parameter [] {
            new Parameter("target_identifier", "", "Target of operation"),
            new Parameter("switch_name", "", "The name of the virtual switch"),
            new Parameter("grant_userid", "", "A userid to be added to the access list for the specified virtual switch"),
            new Parameter("user_vlan_id", "", "The user VLAN ID"),
            new Parameter("revoke_userid", "", "A userid to be removed from the access list for the specified virtual switch"),
            new Parameter("real_device_address", "", "The real device address of a real OSA-Express QDIO device"),
            new Parameter("port_name", "", "The name used to identify the OSA Expanded adapter"),
            new Parameter("controller_name", "*", "The userid controlling the real device or * for any available"),
            new Parameter("connection_value", 0, "Activate/do not"),
            new Parameter("queue_memory_limit", 0, "Specifies the QDIO buffer size in megabytes."),
            new Parameter("routing_value", 0, "Specifies whether the OSA-Express QDIO device will act as a router to the virtual switch"),
            new Parameter("port_type", -1, "Specifies the port type"),
            new Parameter("update_system_config_indicator", -1, "Configuration options"),
            new Parameter("system_config_name", "", "File name of the system configuration file"),
            new Parameter("system_config_type", "", "File type of the system configuration file"),
            new Parameter("parm_disk_owner", "", "Owner of the parm disk"),
            new Parameter("parm_disk_number", "", "Number of the parm disk as defined in the server directory"),
            new Parameter("parm_disk_password", ",", "Multiwrite password for the parm disk"),
            new Parameter("alt_system_config_name", ",", "File name of the second (alternative) system configuration file"),
            new Parameter("alt_system_config_type", ",", "File type of the second (alternative) system configuration file"),
            new Parameter("alt_parm_disk_owner", ",", "Owner of the second (alternative) parm disk"),
            new Parameter("alt_parm_disk_number", ",", "Number of the second (alternative) parm disk"),
            new Parameter("alt_parm_disk_password", ",", "Multiwrite password for the second (alternative) parm disk"),
            new Parameter("gvrp_value", GVRP_VALUE_UNSPECIFIED, "GVRP value"),
            new Parameter("mac_id", "", "The MAC identifier") } ;
    }
}
