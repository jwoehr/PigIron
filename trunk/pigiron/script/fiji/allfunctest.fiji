\ allfunctest.fiji \
\ Test the PigIron Project http://pigiron.sourceforge.net \
\ Declare values that will be used as parameters in making VSMAPI functions \
value directorymanagersearchdm.searchpattern
value imageactivate.targetid
value imagedeactivate.targetid
value imagedeactivate.forcetime
value imagedeletedm.imagetodelete
value sharedmemoryaccessquerydm.memorysegmentname
value imagecreatedm.imagenametocreate
value imagecreatedm.prototypename
value imagecreatedm.intialpassword
value imagecreatedm.accountnumber
value imagecreatedm.noprototype.imagenametocreate
value imagecreatedm.noprototype.prototypename
value imagecreatedm.noprototype.intialpassword
value imagecreatedm.noprototype.accountnumber
value imagecreatedm.noprototype.alltheotherargs
value prototypequerydm.prototypetoquery
value virtualnetworklanaccessquery.lanowner
value virtualnetworklanaccessquery.lanname
value virtualnetworklanquery.lanowner
value virtualnetworklanquery.lanname
value virtualnetworkvswitchquery.switchname

\ Now load the defaults file containing assignments to the values \
allfunctest.defaults.fiji load

\ Now load FIJI support for PigIron \
pigiron_support.fiji load

\ You will have to fill these in on your own \
value my.host
value my.port
value my.userid
value my.password
value my.target

\ utils \

: announce \ functorName -- \ " Testing" . . cr ;
: doandprint \ args functor -- \ doIt ( ) prettyPrintAll ( ) . cr ;
: explain_skip \ StringValueName StringTestorName -- \ . " not run because " . . " was not set." . cr ;

\ tests \

: testing_CheckAuthentication \ -- \
  " CheckAuthentication" announce
   my.host my.port my.userid my.password my.target CheckAuthentication doandprint
;

: testing_QueryAPIFunctionalLevel \ -- \
   " QueryAPIFunctionalLevel" announce
    my.host my.port my.userid my.password my.target QueryAPIFunctionalLevel doandprint
;

: testing_ImageActivate \ -- \
   " ImageActivate" announce
   imageactivate.targetid null <>
   if my.host my.port my.userid my.password imageactivate.targetid ImageActivate doandprint
   else ' my.custom.imageactivate.targetid ' testing_ImageActivate explain_skip
   then
;

: testing_ImageDeactivate \ -- \
   " ImageDeactivate" announce
   imageactivate.targetid null <>
   if my.host my.port my.userid my.password imageactivate.targetid imagedeactivate.forcetime ImageDeactivate doandprint
   else ' my.custom.imageactivate.targetid ' testing_ImageActivate explain_skip
   then
;

: testing_ImageActiveConfigurationQuery  " ImageActiveConfigurationQuery" announce
my.host my.port my.userid my.password my.target ImageActiveConfigurationQuery doandprint ;

: testing_ImageCPUQuery " ImageCPUQuery" announce
 my.host my.port my.userid my.password my.target ImageCPUQuery doandprint ;

: testing_ImageQueryActivateTime_1 " ImageQueryActivateTime" announce
 my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_MMDDYY ImageQueryActivateTime doandprint ;
: testing_ImageQueryActivateTime_2  " ImageQueryActivateTime" announce
my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_MMDDYYYY ImageQueryActivateTime doandprint ;
: testing_ImageQueryActivateTime_3  " ImageQueryActivateTime" announce
my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_YYMMDD ImageQueryActivateTime doandprint ;
: testing_ImageQueryActivateTime_4 " ImageQueryActivateTime" announce
 my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_YYYYMMDD ImageQueryActivateTime doandprint ;
: testing_ImageQueryActivateTime_5 " ImageQueryActivateTime" announce
 my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_DDMMYY ImageQueryActivateTime doandprint ;
: testing_ImageQueryActivateTime_6 " ImageQueryActivateTime" announce
 my.host my.port my.userid my.password my.target ImageQueryActivateTime.DATE_FORMAT_INDICATOR_DDMMYYYY ImageQueryActivateTime doandprint ;

: testing_ImageQueryDM " ImageQueryDM" announce
 my.host my.port my.userid my.password my.target ImageQueryDM doandprint ;
: testing_ImageStatusQuery_1 " ImageStatusQuery" announce
 my.host my.port my.userid my.password my.target ImageStatusQuery doandprint ;
: testing_ImageStatusQuery_2 " ImageStatusQuery" announce
 my.host my.port my.userid my.password " *" ImageStatusQuery doandprint ;

: testing_ImageIPLQueryDM
    " ImageIPLQueryDM" announce  my.host my.port my.userid my.password my.target ImageIPLQueryDM doandprint ;
: testing_ImageNameQueryDM
    " ImageNameQueryDM" announce  my.host my.port my.userid my.password my.target ImageNameQueryDM doandprint ;
: testing_NameListQuery
    " NameListQuery" announce  my.host my.port my.userid my.password
    " *" NameListQuery doandprint ;
: testing_ProfileQueryDM
    " ProfileQueryDM" announce  my.host my.port my.userid my.password my.target ProfileQueryDM doandprint ;

: testing_PrototypeNameQueryDM
    " PrototypeNameQueryDM" announce  my.host my.port my.userid my.password my.target PrototypeNameQueryDM doandprint ;

: testing_QueryDirectoryManagerLevelDM
    " QueryDirectoryManagerLevelDM" announce  my.host my.port my.userid my.password my.target QueryDirectoryManagerLevelDM doandprint ;
: testing_SharedMemoryQuery_1
    " SharedMemoryQuery" announce  my.host my.port my.userid my.password my.target " *" SharedMemoryQuery doandprint ;
: testing_SharedMemoryQuery_2
    " SharedMemoryQuery" announce  my.host my.port my.userid my.password my.target " CMSPIPES" SharedMemoryQuery doandprint ;
: testing_VMRMMeasurementQuery
    " VMRMMeasurementQuery" announce  my.host my.port my.userid my.password my.target VMRMMeasurementQuery doandprint ;
: testing_VirtualNetworkAdapterQuery
    " VirtualNetworkAdapterQuery" announce  my.host my.port my.userid my.password my.target " *" VirtualNetworkAdapterQuery doandprint ;

: testing_DirectoryManagerSearchDM '  testing_DirectoryManagerSearchDM announce
    directorymanagersearchdm.searchpattern null <>
    if my.host my.port my.userid my.password my.target directorymanagersearchdm.searchpattern DirectoryManagerSearchDM doandprint
    else ' directorymanagersearchdm.searchpattern  ' testing_DirectoryManagerSearchDM explain_skip
    then ;
	
: testing_SharedMemoryAccessQueryDM ' testing_SharedMemoryAccessQueryDM announce
    sharedmemoryaccessquerydm.memorysegmentname null <>
    if my.host my.port my.userid my.password my.target sharedmemoryaccessquerydm.memorysegmentname SharedMemoryAccessQueryDM doandprint
    else ' sharedmemoryaccessquerydm.memorysegmentname ' testing_SharedMemoryAccessQueryDM  explain_skip
    then ;

: testing_VirtualNetworkLANAccessQuery ' testing_VirtualNetworkLANAccessQuery announce
    virtualnetworklanaccessquery.lanname null <>
        if virtualnetworklanaccessquery.lanowner null <>
            if my.host my.port my.userid my.password my.target virtualnetworklanaccessquery.lanname virtualnetworklanaccessquery.lanowner
            VirtualNetworkLANAccessQuery doandprint
	else ' virtualnetworklanaccessquery.lanowner ' testing_VirtualNetworkLANAccessQuery explain_skip
        then
    else ' virtualnetworklanaccessquery.lanname  ' testing_VirtualNetworkLANAccessQuery explain_skip
    then ;

: testing_VirtualNetworkLANQuery ' testing_VirtualNetworkLANQuery announce
    virtualnetworklanaccessquery.lanname null <>
        if virtualnetworklanaccessquery.lanowner null <>
            if my.host my.port my.userid my.password my.target virtualnetworklanquery.lanname virtualnetworklanquery.lanowner
            VirtualNetworkLANQuery doandprint
	else ' virtualnetworklanquery.lanowner ' testing_VirtualNetworkLANQuery explain_skip
        then
    else ' virtualnetworklanquery.lanname ' testing_VirtualNetworkLANQuery  explain_skip
    then ;

: testing_VirtualNetworkVswitchQuery ' testing_VirtualNetworkVswitchQuery announce
    virtualnetworkvswitchquery.switchname null <>
    if my.host my.port my.userid my.password my.target virtualnetworkvswitchquery.switchname VirtualNetworkVswitchQuery doandprint
    else ' virtualnetworkvswitchquery.switchname ' testing_VirtualNetworkVswitchQuery explain_skip
    then ;


\ 3 x 3 yields nine different cases for * ... we should also test specific entry_names \
: testing_ImageVolumeSpaceQueryDM_1 ' testing_ImageVolumeSpaceQueryDM_1 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_DEFINITION ImageVolumeSpaceQueryDM.ENTRY_TYPE_VOLUME " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_2 ' testing_ImageVolumeSpaceQueryDM_2 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_DEFINITION ImageVolumeSpaceQueryDM.ENTRY_TYPE_REGION " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_3 ' testing_ImageVolumeSpaceQueryDM_3 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_DEFINITION ImageVolumeSpaceQueryDM.ENTRY_TYPE_GROUP " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_4 ' testing_ImageVolumeSpaceQueryDM_4 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_FREE ImageVolumeSpaceQueryDM.ENTRY_TYPE_VOLUME " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_5 ' testing_ImageVolumeSpaceQueryDM_5 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_FREE ImageVolumeSpaceQueryDM.ENTRY_TYPE_REGION " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_6 ' testing_ImageVolumeSpaceQueryDM_6 announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_FREE ImageVolumeSpaceQueryDM.ENTRY_TYPE_GROUP " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_7 ' testing_ImageVolumeSpaceQueryDM_7  announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_USED ImageVolumeSpaceQueryDM.ENTRY_TYPE_VOLUME " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_8 ' testing_ImageVolumeSpaceQueryDM_8  announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_USED ImageVolumeSpaceQueryDM.ENTRY_TYPE_REGION " *"
    ImageVolumeSpaceQueryDM doandprint ;
: testing_ImageVolumeSpaceQueryDM_9 ' testing_ImageVolumeSpaceQueryDM_9  announce
    my.host my.port my.userid my.password my.target ImageVolumeSpaceQueryDM.QUERY_TYPE_USED ImageVolumeSpaceQueryDM.ENTRY_TYPE_GROUP " *"
    ImageVolumeSpaceQueryDM doandprint ;

\ What we really should do here is save the results from a query and iterate over them. \
\ That's a bit more complex that what the Rexx code currently can do in the individual invocation (.rex) files \
\ So here we will test the popular prototypes by hand \
: testing_PrototypeQueryDM_1 '  testing_PrototypeQueryDM_1 announce
    my.host my.port my.userid my.password ' CMS PrototypeQueryDM doandprint ;
: testing_PrototypeQueryDM_2 ' testing_PrototypeQueryDM_2 announce
    my.host my.port my.userid my.password ' LINUX PrototypeQueryDM doandprint ;

\ Test ImageCreateDM with a prototype \
: testing_ImageCreateDM_1 ' testing_ImageCreateDM_1 announce
    my.host my.port my.userid my.password imagecreatedm.imagenametocreate
    imagecreatedm.prototypename imagecreatedm.intialpassword imagecreatedm.accountnumber
    ImageCreateDM doandprint ;

\ Test ImageCreateDM with no prototype and values supplied \
: testing_ImageCreateDM_2 ' testing_ImageCreateDM_2 announce
    my.host my.port my.userid my.password imagecreatedm.noprototype.imagenametocreate
    imagecreatedm.noprototype.prototypename imagecreatedm.noprototype.intialpassword
    imagecreatedm.noprototype.accountnumber
    " USER_CCCC_FARQUHAR_32M_512M_G  ACCOUNT_W00F " IPL_CMS MACHINE_ESA CONSOLE_001F_3215"
    \ imagecreatedm.noprototype.alltheotherargs \
    ImageCreateDM doandprint ;

\ Delete the prototype-created image \
: testing_ImageDeleteDM_1 ' testing_ImageDeleteDM_1 announce
    imagecreatedm.imagenametocreate null <> 
    if \ We should also test other DATA_SECURITY_ERASE flags \
        my.host my.port my.userid my.password imagecreatedm.imagenametocreate ImageDeleteDM.DATA_SECURITY_ERASE_UNSPECIFIED
        ImageDeleteDM doandprint
    else " imagecreatedm.imagenametocreate" ' testing_ImageDeleteDM explain_skip
    then ;

\ Delete the no-prototype created image \
: testing_ImageDeleteDM_2 ' testing_ImageDeleteDM_2 announce
    imagecreatedm.noprototype.imagenametocreate null <> 
    if \ We should also test other DATA_SECURITY_ERASE flags \
        my.host my.port my.userid my.password imagecreatedm.noprototype.imagenametocreate ImageDeleteDM.DATA_SECURITY_ERASE_UNSPECIFIED
        ImageDeleteDM doandprint
    else " imagecreatedm.noprototype.imagenametocreate" ' ImageDeleteDM explain_skip
    then ;

\ whole shebang \
: test-all \ -- \
    testing_CheckAuthentication
    testing_QueryAPIFunctionalLevel
    testing_ImageActivate
    testing_ImageDeactivate
    testing_ImageActiveConfigurationQuery
    testing_ImageCPUQuery
    testing_ImageQueryActivateTime_1
    testing_ImageQueryActivateTime_2
    testing_ImageQueryActivateTime_3
    testing_ImageQueryActivateTime_4
    testing_ImageQueryActivateTime_5
    testing_ImageQueryActivateTime_6
    testing_ImageQueryDM
    testing_ImageStatusQuery_1
    testing_ImageStatusQuery_2
    testing_ImageIPLQueryDM
    testing_ImageNameQueryDM
    testing_NameListQuery
    testing_ProfileQueryDM
    testing_PrototypeNameQueryDM
    testing_QueryDirectoryManagerLevelDM
    testing_SharedMemoryQuery_1
    testing_SharedMemoryQuery_2
    testing_VMRMMeasurementQuery
    testing_VirtualNetworkAdapterQuery
    testing_DirectoryManagerSearchDM
    testing_SharedMemoryAccessQueryDM
    testing_VirtualNetworkLANAccessQuery
    testing_VirtualNetworkLANQuery
    testing_VirtualNetworkVswitchQuery
    testing_ImageVolumeSpaceQueryDM_1
    testing_ImageVolumeSpaceQueryDM_2
    testing_ImageVolumeSpaceQueryDM_3
    testing_ImageVolumeSpaceQueryDM_4
    testing_ImageVolumeSpaceQueryDM_5
    testing_ImageVolumeSpaceQueryDM_6
    testing_ImageVolumeSpaceQueryDM_7
    testing_ImageVolumeSpaceQueryDM_8
    testing_ImageVolumeSpaceQueryDM_9
    testing_PrototypeQueryDM_1
    testing_PrototypeQueryDM_2
    testing_ImageCreateDM_1
    testing_ImageCreateDM_2
    testing_ImageDeleteDM_1
    testing_ImageDeleteDM_2
    ;
